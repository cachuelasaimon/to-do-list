{"version":3,"sources":["firebase/utils.js","firebase/config.js","redux/types/index.js","components/ToDoList/index.js","components/hooks/index.js","redux/actions/index.js","components/AddToDo/index.js","App.js","reportWebVitals.js","redux/reducers/todosReducer.js","redux/reducers/index.js","redux/sagas/todoSaga.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","todoActions","mapState","todoList","todos","ToDoList","props","useSelector","dispatch","useDispatch","docs","collection","useState","setDocs","useEffect","orderBy","onSnapshot","DBItems","a","documents","forEach","item","push","id","data","useFirestore","trigger","handleDelete","type","payload","todoID","className","style","textAlign","color","marginTop","AnimatePresence","map","todo","i","motion","div","initial","opacity","animate","exit","content","IconButton","onClick","CustomTextBox","useField","field","meta","console","log","error","TextField","helperText","touched","AddToDo","handleFormSubmit","values","newTodo","err","initialValues","validationSchema","Yup","min","max","required","onSubmit","resetForm","name","placeholder","label","fullWidth","Button","endIcon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","state","action","createTodo","onCreateToDo","deleteToDo","onDeleteToDo","TodoSaga","collectionRef","timestamp","Date","add","createdAt","takeLatest","docRef","doc","delete","all","call","Sagas","ToDoSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","Reducers","applyMiddleware","run","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"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","file":"static/js/main.5292c89f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport { firebaseConfig } from './config'\r\n\r\n// Initialize App //\r\nif (firebase.apps.length < 1 ) {\r\n    firebase.initializeApp(firebaseConfig)\r\n} else {\r\n    firebase.app()\r\n}\r\n\r\n///// Firebase Module Export/s /////\r\nexport const firestore = firebase.firestore()\r\n\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyDEmWDoh2KZJyIYmS2uPCd5HHD8cGT6XcU\",\r\n    authDomain: \"todolist-5c5d5.firebaseapp.com\",\r\n    projectId: \"todolist-5c5d5\",\r\n    storageBucket: \"todolist-5c5d5.appspot.com\",\r\n    messagingSenderId: \"864764513598\",\r\n    appId: \"1:864764513598:web:75bf2c21c1e8e3044ff06f\"\r\n  }","export const todoActions = {\r\n    ADD_A_TODO: 'ADD_A_TODO',\r\n    DELETE_A_TODO: 'DELETE_A_TODO', \r\n}","import React, { useState } from 'react'\r\nimport './style.scss'\r\n\r\n///// Material UI /////\r\nimport { IconButton, Button } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n///// Framer Motion /////\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\n///// Custom Hooks /////\r\nimport { useFirestore } from '../hooks'\r\n\r\n///// REDUX /////\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteTodoStart } from '../../redux/actions'\r\nconst mapState = ({ todoList }) => ({\r\n    todoList: todoList.todos\r\n})\r\n\r\nexport default function ToDoList (props) {\r\n    // Redux //\r\n    const { todoList } = useSelector(mapState)\r\n    const dispatch = useDispatch()\r\n    // hooks //\r\n    const { docs } = useFirestore('todos')\r\n    // local state //\r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteTodoStart(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-grid\">\r\n            {!docs && (\r\n                <h5 style={{ textAlign: \"center\", color: \"gray\", marginTop: \"4rem\" }}>\r\n                     You have nothing so far... \r\n                </h5>\r\n            )}\r\n            <AnimatePresence>\r\n            {trigger && docs && docs.map( (todo,i) => (\r\n                <motion.div \r\n                    // Animation \r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    // Attributes\r\n                    key={i} className=\"todo-item\">\r\n                        <p>{ todo.content }</p>\r\n\r\n                        <div className=\"btn-grid\">                            \r\n                            {/* <IconButton className=\"edit-btn\">\r\n                                <EditIcon />\r\n                            </IconButton> */}\r\n                            <IconButton onClick={ () => handleDelete(todo.id)} className=\"delete-btn\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                </motion.div>\r\n            ))}\r\n            </AnimatePresence>\r\n\r\n            {/* <Button variant=\"contained\" onClick={ () => setTrigger(!trigger)}>Show</Button> */}\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { firestore } from '../../firebase/utils'\r\n\r\nexport function useFirestore (collection) {\r\n    const [docs, setDocs] = useState(null)\r\n\r\n    useEffect( () => {\r\n        if (!collection) { return } else {\r\n            // Set Collection Ref \r\n            const collectionRef = firestore.collection(collection)\r\n\r\n            // Set State on DB Update\r\n            collectionRef\r\n            .orderBy('createdAt','desc')\r\n            .onSnapshot( async(DBItems) => {\r\n                let documents = []\r\n                await DBItems.forEach( (item) => {\r\n                    documents.push({id: item.id,...item.data()})\r\n                })\r\n                setDocs(documents)\r\n            })\r\n        }\r\n    },[collection])\r\n    return { docs }\r\n} ","import { todoActions } from '../types'\r\n\r\nexport const createTodoStart = (newTodo) => ({\r\n    type: todoActions.ADD_A_TODO,\r\n    payload: {newTodo}\r\n})\r\n\r\nexport const deleteTodoStart = (todoID) => ({\r\n    type: todoActions.DELETE_A_TODO,\r\n    payload: {todoID}\r\n})","import React, { useEffect } from 'react'\r\nimport './style.scss'\r\n\r\n///// Form Components /////\r\nimport * as Yup from 'yup'\r\nimport { Formik, Form, useField } from 'formik'\r\n\r\n///// Material-UI /////\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\n///// REDUX //////\r\n import { useDispatch } from 'react-redux'\r\n import { createTodoStart } from '../../redux/actions'\r\n\r\n///// Custom Textbox /////\r\nconst CustomTextBox = (props) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    console.log(meta.error)\r\n    return (\r\n        <TextField \r\n            {...field}\r\n            {...props}\r\n            error={meta.error}\r\n            helperText={meta.touched ? meta.error : ''}\r\n        />\r\n    )\r\n}\r\n\r\nexport default function AddToDo (props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleFormSubmit = (values) => {\r\n        try {\r\n            dispatch(createTodoStart(values))\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"add-todo-grid\">\r\n            <Formik\r\n                initialValues={{\r\n                    todo: '',\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    todo: Yup.string()\r\n                        .min(6, \"Minimum of 6 characters\")\r\n                        .max(75, \"Maximum of 75 characters\")\r\n                        .required(\"Please put something in the blank\")\r\n                })}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    try {\r\n                        handleFormSubmit(values)\r\n                        resetForm()\r\n                    } catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                }}\r\n            >\r\n                {props => (\r\n                    <Form>\r\n                        <CustomTextBox\r\n                            name=\"todo\"\r\n                            placeholder=\"Think of something you want to remember\"\r\n                            label=\"Add A To Do\"\r\n                            fullWidth={true}\r\n                         />\r\n\r\n                        <Button\r\n                         endIcon={<AddCircleOutlineIcon />} \r\n                         className=\"submit-btn\"\r\n                         type=\"submit\" >\r\n                             Add\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","///// Styles /////\nimport './App.css';\nimport './default.scss';\n\n///// Components /////\nimport ToDoList from './components/ToDoList/index.js'\nimport AddToDo from './components/AddToDo/index.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddToDo />\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","///// Types /////\r\n\r\n///// Initial State /////\r\nconst initialState = {\r\n    todos: [\r\n        {\r\n            content: \"Content 1\",\r\n        },\r\n        {\r\n            content: \"Content 2\",\r\n        },\r\n        {\r\n            content: \"Content 3\",\r\n        },\r\n    ]\r\n}\r\n\r\nexport default function TodoReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport TodosReducers from './todosReducer'\r\n\r\nexport default combineReducers({\r\n    todoList: TodosReducers,\r\n})","import { todoActions } from '../types'\r\nimport { takeLatest, all, call, put } from 'redux-saga/effects'\r\nimport { firestore } from '../../firebase/utils'\r\n\r\n\r\nexport function* createTodo ({ payload: {newTodo} }) {\r\n    try {\r\n        yield console.log(\"todoSaga/createTodo\")\r\n        const collectionRef = firestore.collection('todos')\r\n        const timestamp = new Date()\r\n        collectionRef.add({\r\n            createdAt: timestamp,\r\n            content: newTodo.todo,\r\n        })\r\n    } catch (err) {\r\n        console.log('From Create To Do')\r\n    }\r\n}\r\nexport function* onCreateToDo () {\r\n    yield takeLatest(todoActions.ADD_A_TODO, createTodo)\r\n}\r\n\r\nexport function* deleteToDo ({ payload: {todoID} }) {\r\n    try {\r\n        const docRef = firestore.doc(`todos/${todoID}`)\r\n        yield docRef.delete()\r\n    } catch (err) {console.log(err)}\r\n}\r\nexport function* onDeleteToDo () {\r\n    yield takeLatest(todoActions.DELETE_A_TODO, deleteToDo)\r\n} \r\n\r\nexport default function* TodoSaga () {\r\n    yield all([\r\n        call(onCreateToDo),\r\n        call(onDeleteToDo),\r\n    ])\r\n}","import { all, call } from 'redux-saga/effects'\r\nimport ToDoSaga from './todoSaga'\r\n\r\nexport default function* Sagas () {\r\n    yield all([\r\n        call(ToDoSaga)\r\n    ])\r\n}","import {applyMiddleware, createStore} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport Reducers from './reducers'\r\nimport Sagas from './sagas'\r\n\r\nconst initialState = {}\r\n\r\n// Middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [sagaMiddleware]\r\n\r\n// Store\r\nconst store = createStore(Reducers, initialState, applyMiddleware(...middleware))\r\n\r\nsagaMiddleware.run(Sagas)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n///// REDUX /////\nimport { Provider } from 'react-redux'\nimport Store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}